{"version":3,"sources":["react.svg","images/fusioncharts.jfif","images/python.png","images/flask.jfif","images/pandas.png","ChartViewer.js","ChartViewer1.js","ChartViewer2.js","ChartViewer3.js","ChartViewer4.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReactFC","fcRoot","FusionCharts","TimeSeries","CandyTheme","jsonify","res","json","dataFetch","fetch","then","schemaFetch","dataSource","chart","theme","caption","text","subcaption","yaxis","plot","value","type","format","suffix","title","datamarker","time","timeformat","tooltext","identifier","React","Component","Charts","myHeaders","Headers","method","headers","mode","ChartViewer1","props","onFetchData","bind","state","datasetting","width","height","dataFormat","this","Promise","all","res_json","datas","forEach","item_json","item","label","xyz_campaign_id","toString","SpentPerTotalConversion","push","setState","xaxisname","yaxisname","numberPrefix","palettecolors","animation","data","baseUrl","ChartViewer2","compaignid","url","palettercolor","category","item_category","ad_id","item_CTR","CTR","numbersuffix","categories","dataset","ChartViewer3","url1","url2","url3","res_json1","res_json2","res_json3","data1","item_data","x","Spent","y","data2","data3","seriesname","anchorbgcolor","ChartViewer4","Clicks","App","className","style","margin","color","src","logo1","alt","require","float","clear","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4398add.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fusioncharts.bfc2c507.jfif\";","module.exports = __webpack_public_path__ + \"static/media/python.c290a443.png\";","module.exports = __webpack_public_path__ + \"static/media/flask.72c2e3e5.jfif\";","module.exports = __webpack_public_path__ + \"static/media/pandas.22942b30.png\";","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport TimeSeries from \"fusioncharts/fusioncharts.timeseries\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\r\n\r\nReactFC.fcRoot(FusionCharts, TimeSeries, CandyTheme);\r\n\r\nconst jsonify = res => res.json();\r\nconst dataFetch = fetch(\r\n    \"https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/annotating-multiple-data-points-data.json\"\r\n).then(jsonify);\r\nconst schemaFetch = fetch(\r\n    \"https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/annotating-multiple-data-points-schema.json\"\r\n).then(jsonify);\r\n\r\nconst dataSource = {\r\n    chart: {\r\n        theme: \"candy\"\r\n    },\r\n    caption: {\r\n        text: \"Interest Rate Comparison\"\r\n    },\r\n    subcaption: {\r\n        text: \"USA and Canada\"\r\n    },\r\n    yaxis: [{\r\n        plot: [{\r\n                value: \"Federal Reserve Bank\",\r\n                type: \"line\"\r\n            },\r\n            {\r\n                value: \"Bank of Canada\",\r\n                type: \"line\"\r\n            }\r\n        ],\r\n        format: {\r\n            suffix: \"%\"\r\n        },\r\n        title: \"Interest Rate \"\r\n    }],\r\n    datamarker: [{\r\n            value: \"Bank of Canada\",\r\n            time: \"Aug-1981\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"To curb the high double digit inflation rate, Bank of Canada had to increase he interest rate to over 20%\"\r\n        },\r\n        {\r\n            value: \"Bank of Canada\",\r\n            time: \"Jun-2010\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"Seeing the balance sheet expand to over $80 Billion after the financial crisis, Bank Of Canada started increasing the interest rates.\"\r\n        },\r\n        {\r\n            value: \"Bank of Canada\",\r\n            time: \"Nov-1996\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"The reduced interest rate propelled business investments in Canada.\"\r\n        },\r\n        {\r\n            value: \"Bank of Canada\",\r\n            time: \"May-1990\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"To fight inflationary pressure, interest rate reached around 15%\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Mar-1980\",\r\n            identifier: \"H\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"As a part of credit control program, under the leadership of Paul Volcker, the Fed tightened the money supply, allowing the federal fund rates to approach 20 percent.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Aug-1982\",\r\n            identifier: \"L\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"The FED eases off the monetary brakes, allowing interest rates to fall and the economy to begin a strong recovery.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Oct-1987\",\r\n            identifier: \"L\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"The FED is forced to ease rate after the stock market crash.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"May-1989\",\r\n            identifier: \"H\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"Liquidity problem forced the Fed to increase rate to nearly 10%.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Sept-1992\",\r\n            identifier: \"L\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"To fight the jobless economy growth the Fed had to reduce the interest rate to 3%.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Jun-2003\",\r\n            identifier: \"L\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"Struggling to revive the economy, the FED cuts it�s benchmark rate to 1%.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Sep-2007\",\r\n            identifier: \"L\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"Fed started reducing the Federal Fund Rate.\"\r\n        },\r\n        {\r\n            value: \"Federal Reserve Bank\",\r\n            time: \"Dec-2008\",\r\n            identifier: \"L\",\r\n            timeformat: \"%b-%Y\",\r\n            tooltext: \"Fed reduced the interest rates to sub 0.25% to manage the menace of longest economic downturn since World War 2\"\r\n        }\r\n    ]\r\n};\r\n\r\nclass ChartViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFetchData = this.onFetchData.bind(this);\r\n        this.state = {\r\n            timeseriesDs: {\r\n                type: \"timeseries\",\r\n                renderAt: \"container\",\r\n                width: \"1000\",\r\n                height: \"380\",\r\n                dataSource\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchData();\r\n    }\r\n\r\n    onFetchData() {\r\n        Promise.all([dataFetch, schemaFetch]).then(res => {\r\n            const data = res[0];\r\n            const schema = res[1];\r\n            const fusionTable = new FusionCharts.DataStore().createDataTable(\r\n                data,\r\n                schema\r\n            );\r\n            const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\r\n            timeseriesDs.dataSource.data = fusionTable;\r\n            this.setState({\r\n                timeseriesDs\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return ( <div > {\r\n                this.state.timeseriesDs.dataSource.data ? ( <\r\n                    ReactFC {\r\n                        ...this.state.timeseriesDs\r\n                    }\r\n                    />\r\n                ) : (\r\n                    \"loading\"\r\n                )\r\n            } </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartViewer;","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\r\n\r\n// Resolves charts dependancy\r\nReactFC.fcRoot(FusionCharts, Charts, CandyTheme);\r\n\r\nconst url = \"http://127.0.0.1:5000/get_statistic_per_campaign\";\r\nconst jsonify = res => res.json();\r\n\r\nlet myHeaders = new Headers({\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'text/plain'\r\n});\r\n\r\nconst dataFetch = fetch(\r\n   url,\r\n    {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        mode: 'cors'\r\n    }\r\n).then(jsonify);\r\n\r\nclass ChartViewer1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFetchData = this.onFetchData.bind(this);\r\n        this.state = {\r\n            datasetting:{\r\n                type :\"column2d\",\r\n                width :\"600\",\r\n                height :\"550\",\r\n                dataFormat :\"JSON\",\r\n                dataSource:{}\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchData();\r\n    }\r\n\r\n    onFetchData() {\r\n        Promise.all([dataFetch]).then(res => {\r\n            const res_json = res[0];\r\n            // console.log(res_json);\r\n            var datas = [];\r\n            res_json.forEach((item_json) => {\r\n                var item = {\r\n                    label: item_json.xyz_campaign_id.toString(),\r\n                    value: item_json.SpentPerTotalConversion\r\n                };\r\n                datas.push(item);\r\n            });\r\n\r\n            this.setState({\r\n                datasetting:{\r\n                    dataSource:{\r\n                        chart: {\r\n                            caption: \"Conversion cost per campaign with Facebook\",\r\n                            subcaption: `As can be seen from the above figure, xyz conducted 3 campaigns(campaign activities) with \r\n                            campaign ids of 916, 936, and 1178. 916 placed 54 advertisements, which cost about 149.71,\r\n                            which contributed 58 conversions;\r\n                            464 ads, costing about 2893.37 resulted in 537 conversions;\r\n                            1178 placed 625 ads, costing about 55662.15, resulting in 2669 conversions.Although 1178 has\r\n                            the most conversions, the average cost per conversion is about 20.86.Approximately a drop,\r\n                                the 916 average contributed to about 2.58 per conversion.\r\n                            `,\r\n                            xaxisname: \"Campaign id\",\r\n                            yaxisname: \"Conversion cost(Spent/Conversion)\",\r\n                            // numbersuffix: \"$\",\r\n                            numberPrefix:\"$\",\r\n                            theme: \"candy\",\r\n                            palettecolors: \"#36B5D8 ,#E52D8A,#F1E408\",\r\n                            animation:\"1\"\r\n                        },\r\n                        data:datas \r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            { \r\n                this.state.datasetting.dataSource ? ( < ReactFC {\r\n                                 ...this.state.datasetting\r\n                             }\r\n                             />):('loading...')\r\n        }\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default ChartViewer1;","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\r\n\r\n// Resolves charts dependancy\r\nReactFC.fcRoot(FusionCharts, Charts, CandyTheme);\r\n\r\nconst baseUrl = \"http://127.0.0.1:5000\";\r\n\r\nclass ChartViewer2 extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.compaignid = props.compaignid;\r\n        this.url = `${baseUrl}/get_statistic_top_ctr_in_a_campaign/${props.compaignid}/5`;\r\n        this.onFetchData = this.onFetchData.bind(this);\r\n        this.state = {\r\n            datasetting:{\r\n                type: \"scrollbar2d\",\r\n                width :\"600\",\r\n                height :\"200\",\r\n                dataFormat :\"JSON\",\r\n                dataSource:{}\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchData(this.url);\r\n    }\r\n\r\n    onFetchData(url) {\r\n        Promise.all([fetch(\r\n                url, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': 'text/plain'\r\n                    }),\r\n                    mode: 'cors'\r\n                }\r\n            ).then(res => res.json())]).then(res => {\r\n            const res_json = res[0];\r\n            var categories = [];\r\n            var dataset = [];\r\n            var category = [];\r\n            var data = [];\r\n            res_json.forEach((item_json) => {\r\n                var item_category = {\r\n                    label: item_json.ad_id.toString(),\r\n                };\r\n                category.push(item_category);\r\n                \r\n                var item_CTR = {\r\n                    value: item_json.CTR*100,\r\n                };\r\n                data.push(item_CTR);\r\n            });\r\n            categories.push(category);\r\n            dataset.push(data);\r\n\r\n            let palettercolor;\r\n            if (this.compaignid === \"916\") {\r\n                palettercolor =  \"#36B5D8\";\r\n            }\r\n            else if (this.compaignid === \"936\") {\r\n                palettercolor = \"#E52D8A\";\r\n            }\r\n            else {\r\n                palettercolor = \"F1E408\";\r\n            }\r\n                \r\n\r\n            this.setState({\r\n                datasetting:{\r\n                    dataSource:{\r\n                        chart: {\r\n                            caption: `Top5 Ads of CTR on campign id ${this.compaignid} with Facebook`,\r\n                            subcaption: ``,\r\n                            xaxisname: \"Ads-id\",\r\n                            yaxisname: \"CTR\",\r\n                            numbersuffix: \"%\",\r\n                            theme: \"candy\",\r\n                            palettecolors: palettercolor\r\n                        },\r\n                        // categories: categories,\r\n                        // dataset:dataset\r\n                        categories: [{\r\n                                category: category\r\n                            }],\r\n                            dataset: [{\r\n                                data: data\r\n                            }]\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            { \r\n            < ReactFC {\r\n                ...this.state.datasetting\r\n            }\r\n            />\r\n                // this.state.datasetting.dataSource ? ( < ReactFC {\r\n                //                  ...this.state.datasetting\r\n                //              }\r\n                //              />):('loading...')\r\n        }\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default ChartViewer2;","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\r\n\r\n// Resolves charts dependancy\r\nReactFC.fcRoot(FusionCharts, Charts, CandyTheme);\r\n\r\nconst baseUrl = \"http://127.0.0.1:5000\";\r\n\r\nclass ChartViewer3 extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.compaignid = props.compaignid;\r\n        this.url1 = `${baseUrl}/get_statistic_top_ctr_in_a_campaign/916/5`;\r\n        this.url2 = `${baseUrl}/get_statistic_top_ctr_in_a_campaign/936/5`;\r\n        this.url3 = `${baseUrl}/get_statistic_top_ctr_in_a_campaign/1178/5`;\r\n        this.onFetchData = this.onFetchData.bind(this);\r\n        this.state = {\r\n            datasetting:{\r\n                type: \"scatter\",\r\n                width :\"600\",\r\n                height :\"300\",\r\n                dataFormat :\"JSON\",\r\n                dataSource:{}\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchData(this.url1, this.url2, this.url3);\r\n    }\r\n\r\n    onFetchData(url1,url2,url3) {\r\n        Promise.all([fetch(\r\n                url1, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': 'text/plain'\r\n                    }),\r\n                    mode: 'cors'\r\n                }\r\n            ).then(res => res.json()), fetch(\r\n            url2, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'text/plain'\r\n            }),\r\n            mode: 'cors'\r\n            }\r\n            ).then(res => res.json()),fetch(\r\n                url3, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': 'text/plain'\r\n                    }),\r\n                    mode: 'cors'\r\n                }\r\n            ).then(res => res.json())]).then(res => {\r\n            const res_json1 = res[0];\r\n            const res_json2 = res[1];\r\n            const res_json3 = res[2];\r\n\r\n            var category = [\r\n                {\r\n                    x: \"0\",\r\n                    label: \"$0\"\r\n                }, {\r\n                    x: \"5\",\r\n                    label: \"$5\"\r\n                }, {\r\n                    x: \"10\",\r\n                    label: \"$10\"\r\n                }, {\r\n                    x: \"15\",\r\n                    label: \"$15\"\r\n                }, {\r\n                    x: \"20\",\r\n                    label: \"$20\"\r\n                }, {\r\n                    x: \"25\",\r\n                    label: \"$25\"\r\n                }, {\r\n                    x: \"30\",\r\n                    label: \"$30\"\r\n                }, {\r\n                    x: \"35\",\r\n                    label: \"$35\"\r\n                }, {\r\n                    x: \"40\",\r\n                    label: \"$40\"\r\n                }, {\r\n                    x: \"45\",\r\n                    label: \"$45\"\r\n                }, {\r\n                    x: \"50\",\r\n                    label: \"$50\"\r\n                }, {\r\n                    x: \"55\",\r\n                    label: \"$55\"\r\n                }, {\r\n                    x: \"60\",\r\n                    label: \"$60\"\r\n                }, {\r\n                    x: \"65\",\r\n                    label: \"$65\"\r\n                }\r\n            ];\r\n            var data1 = [];\r\n            res_json1.forEach((item_json) => {\r\n                var item_data = {\r\n                    x: item_json.Spent.toString(),\r\n                    y: item_json.CTR*100\r\n                };\r\n                data1.push(item_data); \r\n            });\r\n            var data2 = [];\r\n            res_json2.forEach((item_json) => {\r\n                var item_data = {\r\n                    x: item_json.Spent.toString(),\r\n                    y: item_json.CTR * 100\r\n                };\r\n                data2.push(item_data);\r\n            });\r\n            var data3 = [];\r\n            res_json3.forEach((item_json) => {\r\n                var item_data = {\r\n                    x: item_json.Spent.toString(),\r\n                    y: item_json.CTR * 100\r\n                };\r\n                data3.push(item_data);\r\n            });\r\n\r\n            this.setState({\r\n                datasetting:{\r\n                    dataSource:{\r\n                        chart: {\r\n                            caption: `The relationship between Spent and CTR`,\r\n                            subcaption: `The cost is not related to the click rate, not the more the ad spend, the more clicks.`,\r\n                            xaxisname: \"Spend($) per click\",\r\n                            yaxisname: \"CTR\",\r\n                            numbersuffix: \"\",\r\n                            theme: \"candy\"\r\n                        },\r\n                        // categories: categories,\r\n                        // dataset:dataset\r\n                        categories: [{\r\n                                category: category\r\n                            }],\r\n                            dataset: [{\r\n                                seriesname: \"916\",\r\n                                anchorbgcolor: \"36B5D8\",\r\n                                data: data1\r\n                            }, {\r\n                                seriesname: \"936\",\r\n                                anchorbgcolor: \"E52D8A\",\r\n                                data: data2\r\n                            }, {\r\n                                seriesname: \"1178\",\r\n                                anchorbgcolor: \"F1E408\",\r\n                                data: data3\r\n                            }]\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            { \r\n            < ReactFC {\r\n                ...this.state.datasetting\r\n            }\r\n            />\r\n                // this.state.datasetting.dataSource ? ( < ReactFC {\r\n                //                  ...this.state.datasetting\r\n                //              }\r\n                //              />):('loading...')\r\n        }\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default ChartViewer3;","import React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\r\n\r\n// Resolves charts dependancy\r\nReactFC.fcRoot(FusionCharts, Charts, CandyTheme);\r\n\r\nconst baseUrl = \"http://127.0.0.1:5000\";\r\n\r\nclass ChartViewer4 extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.compaignid = props.compaignid;\r\n        this.url1 = `${baseUrl}/get_diagram_spent_vs_click_in_a_campaign/916`;\r\n        this.url2 = `${baseUrl}/get_diagram_spent_vs_click_in_a_campaign/936`;\r\n        this.url3 = `${baseUrl}/get_diagram_spent_vs_click_in_a_campaign/1178`;\r\n        this.onFetchData = this.onFetchData.bind(this);\r\n        this.state = {\r\n            datasetting:{\r\n                type: \"scatter\",\r\n                width :\"600\",\r\n                height :\"300\",\r\n                dataFormat :\"JSON\",\r\n                dataSource:{}\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchData(this.url1, this.url2, this.url3);\r\n    }\r\n\r\n    onFetchData(url1,url2,url3) {\r\n        Promise.all([fetch(\r\n                url1, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': 'text/plain'\r\n                    }),\r\n                    mode: 'cors'\r\n                }\r\n            ).then(res => res.json()), fetch(\r\n            url2, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'text/plain'\r\n            }),\r\n            mode: 'cors'\r\n            }\r\n            ).then(res => res.json()),fetch(\r\n                url3, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Access-Control-Allow-Origin': '*',\r\n                        'Content-Type': 'text/plain'\r\n                    }),\r\n                    mode: 'cors'\r\n                }\r\n            ).then(res => res.json())]).then(res => {\r\n            const res_json1 = res[0];\r\n            const res_json2 = res[1];\r\n            const res_json3 = res[2];\r\n\r\n            var category = [\r\n                {\r\n                    x: \"0\",\r\n                    label: \"0\"\r\n                }, {\r\n                    x: \"5\",\r\n                    label: \"5\"\r\n                }, {\r\n                    x: \"10\",\r\n                    label: \"10\"\r\n                }, {\r\n                    x: \"15\",\r\n                    label: \"15\"\r\n                }, {\r\n                    x: \"20\",\r\n                    label: \"20\"\r\n                }\r\n                // , {\r\n                //     x: \"25\",\r\n                //     label: \"25\"\r\n                // }, {\r\n                //     x: \"30\",\r\n                //     label: \"30\"\r\n                // }, {\r\n                //     x: \"35\",\r\n                //     label: \"35\"\r\n                // }, {\r\n                //     x: \"40\",\r\n                //     label: \"40\"\r\n                // }, {\r\n                //     x: \"45\",\r\n                //     label: \"45\"\r\n                // }, {\r\n                //     x: \"50\",\r\n                //     label: \"50\"\r\n                // }, {\r\n                //     x: \"55\",\r\n                //     label: \"55\"\r\n                // }, {\r\n                //     x: \"60\",\r\n                //     label: \"60\"\r\n                // }, {\r\n                //     x: \"65\",\r\n                //     label: \"65\"\r\n                // }\r\n            ];\r\n            var data1 = [];\r\n            res_json1.forEach((item_json) => {\r\n                var item_data = {\r\n                    x: item_json.Spent.toString(),\r\n                    y: item_json.Clicks\r\n                };\r\n                data1.push(item_data); \r\n            });\r\n            var data2 = [];\r\n            res_json2.forEach((item_json) => {\r\n                var item_data = {\r\n                    x: item_json.Spent.toString(),\r\n                    y: item_json.Clicks\r\n                };\r\n                data2.push(item_data);\r\n            });\r\n            var data3 = [];\r\n            res_json3.forEach((item_json) => {\r\n                var item_data = {\r\n                    x: item_json.Spent.toString(),\r\n                    y: item_json.Clicks\r\n                };\r\n                data3.push(item_data);\r\n            });\r\n\r\n            this.setState({\r\n                datasetting:{\r\n                    dataSource:{\r\n                        chart: {\r\n                            caption: `The relationship between Spent and Click`,\r\n                            subcaption: `Clicks are positively correlated with spend, indicating that Facebook charges advertisers by clicks.`,\r\n                            xaxisname: \"Spent\",\r\n                            yaxisname: \"Click\",\r\n                            numbersuffix: \"\",\r\n                            theme: \"candy\"\r\n                        },\r\n                        // categories: categories,\r\n                        // dataset:dataset\r\n                        categories: [{\r\n                                category: category\r\n                            }],\r\n                            dataset: [{\r\n                                seriesname: \"916\",\r\n                                anchorbgcolor: \"36B5D8\",\r\n                                data: data1\r\n                            }\r\n                            , {\r\n                                seriesname: \"936\",\r\n                                anchorbgcolor: \"E52D8A\",\r\n                                data: data2\r\n                            }\r\n                            , {\r\n                                seriesname: \"1178\",\r\n                                anchorbgcolor: \"F1E408\",\r\n                                data: data3\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            { \r\n            < ReactFC {\r\n                ...this.state.datasetting\r\n            }\r\n            />\r\n                // this.state.datasetting.dataSource ? ( < ReactFC {\r\n                //                  ...this.state.datasetting\r\n                //              }\r\n                //              />):('loading...')\r\n        }\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default ChartViewer4;","import React from 'react';\nimport logo1 from './react.svg';\n// import * from './images/*';\nimport './App.css';\nimport ChartViewer from './ChartViewer';\nimport ChartViewer1 from './ChartViewer1';\nimport ChartViewer2 from './ChartViewer2';\nimport ChartViewer3 from './ChartViewer3';\nimport ChartViewer4 from './ChartViewer4';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{height:'100vh'}}>\n     \n      <header className=\"App-header\">\n         < div style={{width:'80%',margin:'0 auto'}}>\n           <\n           h2 style = {\n             {\n               color: 'white'\n             }\n           } > Ad serving analysis.</h2> \n           </div>\n        < img src = {\n          logo1\n        }\n        className = \"App-logo\"\n        alt = \"ReactJs\" / >\n      < img src = {\n        require('./images/fusioncharts.jfif')\n      }\n      className = \"App-logo\"\n      alt = \"FusionCharts\" / >\n      \n        < img src = {\n          require('./images/python.png')\n        }\n        className = \"App-logo\"\n        alt = \"Python\" / >\n      < img src = {\n        require('./images/flask.jfif')\n      }\n      className = \"App-logo\"\n      alt = \"Flask\" / >\n        < img src = {\n          require('./images/pandas.png')\n        }\n        className = \"App-logo\"\n        alt = \"Pandas\" / >\n        <hr/>\n        <div style={{float:'left'}}>\n        < ChartViewer1 / >\n        </div>\n        <div style={{float:'right'}}>\n        < ChartViewer2 compaignid='916' / >\n        < ChartViewer2 compaignid = '936' / >\n        < ChartViewer2 compaignid = '1178' / >\n        </div>\n        <div style={{clear:'both'}}></div>\n        {/* <hr / > */}\n        < div style = {\n          {\n            float: 'left'\n          }\n        } >\n        < ChartViewer3 / >\n        </div>\n       \n          < div style = {\n              {\n                float: 'right'\n              }\n            } >\n            <ChartViewer4 / >\n            </div> <div style = {\n              {\n                clear: 'both'\n              }\n            } > </div> \n            {/* <hr / > */}\n        {/* < ChartViewer / > */}\n        <hr/>\n        < div style={{fontSize:'1rem'}}> Created by LiQi;\n        Reference: https: //www.fusioncharts.com/</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}